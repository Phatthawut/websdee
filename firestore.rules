rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Articles collection - restrict read access to published articles only
    match /articles/{document} {
      // Only allow reading published articles to public
      allow read: if resource.data.status == 'published';
      
      // Authenticated users with editor/admin roles can read all articles
      allow read: if request.auth != null 
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' 
            || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'editor');
      
      // Only authenticated users with editor/admin roles can write
      allow write: if request.auth != null 
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' 
            || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'editor');
    }
    
    // Users collection - restricted access
    match /users/{userId} {
      // Users can read and write their own profile
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read and write all user profiles
      allow read, write: if request.auth != null 
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Payments collection - secure access with validation
    match /payments/{paymentId} {
      // Restrict create access with validation
      allow create: if 
        // Must include required fields
        request.resource.data.keys().hasAll(['id', 'status', 'amount', 'currency', 'created_at'])
        // Amount must be reasonable (between à¸¿100 and à¸¿100,000)
        && request.resource.data.amount >= 10000 && request.resource.data.amount <= 10000000
        // Currency must be THB
        && request.resource.data.currency == 'THB'
        // Status must be valid
        && request.resource.data.status in ['pending', 'succeeded', 'failed', 'cancelled']
        // Rate limiting: max 10 payments per hour per IP (basic protection)
        && request.time > resource.data.created_at + duration.value(1, 'h');
      
      // Only admins can read and update payments
      allow read, update, delete: if request.auth != null 
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
} 